@model SP.Web.ViewModels.InventoryProcessingViewModel

@{
    ViewData["Title"] = "CalcBalance";
}

<h1>Расчет остатков ТМЦ</h1>

<form id="mainForm" method="post" enctype="multipart/form-data">
    <div class="zero-gutters col-xl-9">
        <div class="form-row zero-gutters">
            <div class="form-group row col-4">
                <label asp-for="ProcessingDate" class="control-label col-6"></label>
                <input asp-for="ProcessingDate" type="date" class="form-control col-6" />
                <span asp-validation-for="ProcessingDate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-row zero-gutters">
            <div class="form-group row col-6">
                <label for="RegionList" class="control-label col-4">Регион</label>
                <select id="RegionList" asp-items="ViewBag.RegionList" class="col-8" onchange="loadTerritories(this);"></select>
            </div>
            <div class="form-group row col-6">
                <label for="NomenclatureGroupList" class="control-label col-4">Группа номенклатуры</label>
                <select id="NomenclatureGroupList" asp-items="ViewBag.NomenclatureGroupList" class="col-8" onchange="loadNomenclature(this);"></select>
            </div>
        </div>
        <div class="form-row zero-gutters">
            <div class="form-group row col-6">
                <label for="TerritoryList" class="control-label col-4">Территория</label>
                <select id="TerritoryList" class="col-8" onchange="loadStations(this);"></select>
            </div>
            <div class="form-group row col-6">
                <label for="NomenclatureList" class="control-label col-4">Номенклатура</label>
                <select id="NomenclatureList" class="col-8"></select>
            </div>
        </div>
        <div class="form-row zero-gutters">
            <div class="form-group row col-6">
                <label for="GasStationList" class="control-label col-4">АЗС</label>
                <select id="GasStationList" class="col-8"></select>
            </div>
            <div class="form-group row col-6">
                <label for="UserfulLifeList" class="control-label col-4">СПИ</label>
                <select id="UserfulLifeList" multiple="multiple" data-placeholder="Выберите значения..."
                        asp-items="ViewBag.UserfulLifeList" class="col-8"></select>
            </div>
        </div>
        <div class="form-row button-row">
            <button id="submit" class="btn btn-primary">Выполнить</button>
            <a href='@Url.Action("Balance", "Inventory")' class="btn btn-success">Перейти на следующий шаг</a>
            <a href='@Url.Action("ManualMerge", "Inventory")' class="btn btn-secondary">Вернуться назад</a>
        </div>
        <div class="form-row zero-gutters">
            <div class="form-group row col-4">
                <label asp-for="ProcessingLog" class="control-label col-12"></label>
            </div>
        </div>
        <div class="form-row zero-gutters">
            <div class="form-group row col-12">
                <textarea asp-for="ProcessingLog" readonly="readonly" class="form-control log-textarea"></textarea>
            </div>
        </div>
    </div>
</form>

<input id="serviceKey" type="hidden" />

<div class="modal js-loading-bar" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Расчет остатков ТМЦ</h5>
            </div>
            <div class="modal-body">
                <div class="progress-step"></div>
                <div class="progress" style="height: 20px;">
                    <div class="progress-bar" role="progressbar"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        var intervalId;
        $(document).ready(function () {
            $('#UserfulLifeList').chosen();

            $('#submit').on('click', function (evt) {
                evt.preventDefault();
                var hasErrors = false;
                if ($('#ProcessingDate').val() === '') {
                    $('#ProcessingDate + span').text('Поле Дата обработки обязательно для заполнения.');
                    hasErrors = true;
                }
                //if (hasErrors) return;

                var data = {
                    region: $('#RegionList').val(),
                    terr: $('#TerritoryList').val(),
                    station: $('#GasStationList').val(),
                    group: $('#NomenclatureGroupList').val(),
                    nom: $('#NomenclatureList').val(),
                    useful: $('#UsefulLife').val().join()
                };
                console.log(data);

                $.ajax({
                    url: '',
                    data: data,
                    type: 'post',
                    success: function (data) {
                        $('input + span').text('');
                        $('#serviceKey').val(data.key);
                        $('.modal-footer').hide();
                        $('.js-loading-bar').modal('show');
                        intervalId = setInterval(function () {
                            updateProgress();
                        }, 1000);
                    }
                });
            });

            $('.js-loading-bar').modal({
                backdrop: 'static',
                show: false
            });
        });

        function updateProgress() {
            var keyValue = $('#serviceKey').val();
            $.ajax({
                url: 'PeekStatus',
                data: 'key=' + keyValue,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                processData: false,
                type: 'get',
                success: function (data) {
                    $('.progress-step').text(data.step);
                    $('.progress-bar').width(data.progress + '%');
                    $('.progress-bar').text(data.progress.toFixed(0) + '%');
                    if (data.status > 2) {
                        clearInterval(intervalId);
                        $('.log-textarea').val(data.log);
                        $('.modal-footer').show();
                    }
                }
            });
        }

        function loadTerritories(control) {
            var region = $(control).val();
            var terrList = $('#TerritoryList');
            terrList.empty();
            $("#GasStationList").empty();
            if (region === '') {
                terrList.trigger('change');
                return;
            }
            var url = '/Region/LoadTerritories';
            var requestData = { parent: region };
            $.get(url,
                requestData,
                function (data) {
                    terrList.append($('<option>',
                        {
                            value: '',
                            text: '-- ВСЕ --'
                        }));
                    $.each(data,
                        function (index, element) {
                            terrList.append($('<option>',
                                {
                                    value: element.id,
                                    text: element.name
                                }));
                        });
                    terrList.prop('selectedIndex', 0);
                    terrList.trigger('change');
                });
        }

        function loadStations(control) {
            var region = $('#RegionList').val();
            var territory = $(control).val();
            var stationList = $("#GasStationList");
            stationList.empty();
            if (territory === '') {
                stationList.trigger('change');
                return;
            }
            var url = '/Station/LoadStations';
            var requestData = {
                'region': region,
                'terr': territory
            };
            $.get(url,
                requestData,
                function (data) {
                    stationList.append($('<option>',
                        {
                            value: '',
                            text: '-- ВСЕ --'
                        }));
                    $.each(data,
                        function (index, element) {
                            stationList.append($('<option>',
                                {
                                    value: element.id,
                                    text: element.name
                                }));
                        });
                    stationList.prop('selectedIndex', 0);
                    stationList.trigger('change');
                });
        }

        function loadNomenclature(control) {
            var group = $(control).val();
            var nomList = $('#NomenclatureList');
            nomList.empty();
            if (group === '') {
                nomList.trigger('change');
                return;
            }
            var url = '/Nomenclature/LoadNomenclature';
            var requestData = { 'group': group };
            $.get(url,
                requestData,
                function (data) {
                    nomList.append($('<option>',
                        {
                            value: '',
                            text: '-- ВСЕ --'
                        }));
                    $.each(data,
                        function (index, element) {
                            nomList.append($('<option>',
                                {
                                    value: element.id,
                                    text: element.name
                                }));
                        });
                    nomList.prop('selectedIndex', 0);
                    nomList.trigger('change');
                });
        }
    </script>
}
