@model SP.Web.ViewModels.InventoryProcessingViewModel
@{
    ViewData["Title"] = "ManualMergeInventory";
}
<h1>Ручное объединение ТМЦ в Номенклатуру</h1>
<form method="post" enctype="multipart/form-data">
    <div class="zero-gutters col-xl-12">
        <div class="form-row zero-gutters">
            <div class="form-group row col-4">
                <label asp-for="ProcessingDate" class="control-label col-4"></label>
                <input asp-for="ProcessingDate" type="date" class="form-control col-6" readonly="readonly"/>
                <span asp-validation-for="ProcessingDate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-row zero-gutters">
            <div class="form-group row col-8">
                <label for="MergeTypeList" class="control-label col-2">Фильтр</label>
                <select id="MergeTypeList" asp-items="ViewBag.MergeTypeList" class="col-6" onchange="reloadTable()"></select>
            </div>
        </div>
    </div>
</form>

<div class="col-md-12" style="padding: 0;">
    <section class="container">
        <table id="InventoryGrid" class="table table-striped table-bordered nowrap" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th><input type="checkbox" class="selectAll" /></th>
                    <th></th>
                    <th></th>
                    <th class="exportable-column">Код Петроникс</th>
                    <th class="exportable-column">Наименование ТМЦ</th>
                    <th class="exportable-column">Ед.изм.</th>
                    <th class="exportable-column">АЗС</th>
                    <th class="exportable-column">Код Номенклатуры</th>
                    <th class="exportable-column">Наименование Номенклатуры</th>
                </tr>
            </thead>
        </table>
    </section>
</div>
<input id="serviceKey" type="hidden" />
<section>
    <div class="modal" id="FilterModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Фильтры</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body filter-area">
                    <div class="col-12">
                        <div class="form-row zero-gutters">
                            <div class="form-group row col-12">
                                <label for="RegionList" class="control-label zero-gutters col-3">Регион</label>
                                <select id="RegionList" asp-items="ViewBag.RegionList" class="col-9" onchange="loadTerritories(this);"></select>
                            </div>
                            <div class="form-group row col-12">
                                <label for="TerritoryList" class="control-label zero-gutters col-3">Территория</label>
                                <select id="TerritoryList" class="col-9" onchange="loadStations(this);"></select>
                            </div>
                            <div class="form-group row col-12">
                                <label for="GasStationList" class="control-label zero-gutters col-3">АЗС</label>
                                <select id="GasStationList" class="col-9"></select>
                            </div>
                            <div class="form-group row col-12">
                                <label for="NomenclatureGroupList" class="control-label zero-gutters col-3">Группа номенклатуры</label>
                                <select id="NomenclatureGroupList" asp-items="ViewBag.NomenclatureGroupList" class="col-9" onchange="loadNomenclature(this);"></select>
                            </div>
                            <div class="form-group row col-12">
                                <label for="NomenclatureList" class="control-label zero-gutters col-3">Номенклатура</label>
                                <select id="NomenclatureList" class="col-9"></select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer form-row button-row">
                    <button type="button" class="btn btn-primary" onclick="applyFilter();">Применить и закрыть</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal js-loading-bar" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Загрузка ТМЦ</h5>
                </div>
                <div class="modal-body">
                    <div class="progress-step"></div>
                    <div class="progress" style="height: 20px;">
                        <div class="progress-bar" role="progressbar"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
    <div id="NomenclatureModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Выбор номенклатуры</h5>
                </div>
                <div class="modal-body">
                    <div id="NomenclatureModalContent"></div>
                </div>
                <div class="modal-footer">
                    <button id="btnLinkNomenclature" class="btn btn-success" onclick="linkSelectedNomenclature();">Привязать</button>
                    <button class="btn btn-primary" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts
{
    <script>
        var selectedInventories;
        $(document).ready(function() {
            var d = new Date();
            var todayString = ("0" + d.getDate()).slice(-2) + "." + ("0" + (d.getMonth() + 1)).slice(-2) + "." + d.getFullYear();
            $('#InventoryGrid').DataTable({
                language: {
                    url: '/lib/datatables/i18n/dt-russian.json'
                },
                rowId: 'id',
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[2, "asc"]],
                lengthMenu: [
                    [10, 25, 50, 100, -1],
                    [10, 25, 50, 100, "Все"]
                ],
                processing: true,
                ajax: {
                    url: '/Inventory/LoadMergeList',
                    type: 'POST',
                    data: function (d) {
                        d.mergeType = $('#MergeTypeList').val();
                    },
                    dataType: 'json'
                },
                columns: [
                    { defaultContent: '' },
                    {
                        render: function(data, type, full, meta) {
                            return '<a onclick="linkSingleInventory(' + full.id + ');" title="Привязать"><img src="/images/link.svg"/></a>';
                        }
                    },
                    {
                        data: null,
                        render: {
                            '_': 'active',
                            'filter': 'active',
                            'display': function(data, type, full, meta) {
                                if (full.active === '1') return null;
                                else return '<img src="/images/ban-solid-16.png" alt="blocked" title="ТМЦ не объединена в Номенклатуру и исключена из рассмотрения" />';
                            }
                        }
                    },
                    { data: 'inventoryCode' },
                    { data: 'inventoryName' },
                    { data: 'measureUnitName' },
                    { data: 'stationNumber' },
                    { data: 'nomenclatureCode' },
                    { data: 'nomenclatureName' }
                ],
                columnDefs: [
                    {
                        targets: 'hidden-column',
                        visible: false
                    },
                    {
                        targets: 0,
                        data: null,
                        orderable: false,
                        sorting: false,
                        className: 'select-checkbox',
                        width: '1.5em'
                    },
                    {
                        targets: 1,
                        orderable: false,
                        sorting: false,
                        width: '1em'
                    },
                    {
                        targets: 2,
                        orderable: false,
                        sorting: false,
                        className: 'dt-center',
                        width: '1em'
                    }
                ],
                dom:
                    "<'row'<'col-sm-12 col-md-12 dt-action-group'B>>" +
                        "<'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4'i><'col-sm-12 col-md-'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-12 col-md-6 left-pagination'p>>",
                buttons:
                [
                    {
                        text: 'Привязать отмеченные',
                        titleAttr: "Привязать отмеченные записи к Номенклатуре",
                        className: 'dt-action-button btn btn-primary',
                        action: function(e, dt, node, config) {
                            selectedInventories = dt.rows({ selected: true }).data().pluck('id').toArray();
                            loadNomenclatureModal();
                        }
                    },
                    {
                        text: 'Исключить отмеченные',
                        titleAttr: "Не привязывать отмеченные записи к Номенклатуре и исключить из дальнейшего рассмотрения",
                        className: 'dt-action-button btn btn-primary',
                        action: function(e, dt, node, config) {
                            selectedInventories = dt.rows({ selected: true }).data().pluck('id').toArray();
                            blockSelectedInventories();
                        }
                    },
                    {
                        text: 'Перейти на следующий шаг',
                        className: 'dt-action-button btn btn-success',
                        action: function() {
                            window.location = '@Url.Action("CalcBalance", "Inventory")';
                        }
                    },
                    {
                        text: 'Вернуться назад',
                        className: 'dt-action-button btn btn-secondary',
                        action: function() {
                            window.location = '@Url.Action("AutoMerge", "Inventory")';
                        }
                    },
                    {
                        text: 'Excel',
                        titleAttr: "Выгрузить таблицу в Excel",
                        className: 'dt-action-button',
                        extend: 'excel',
                        title: 'Объединение ТМЦ в Номенклатуру',
                        messageTop: 'Дата выгрузки ' + todayString,
                        exportOptions: {
                            columns: '.exportable-column',
                            modifier: { search: 'applied' }
                        }
                    }
                ]
            });
            var dt = $('#InventoryGrid').DataTable();
            // select all checkbox
            $(".selectAll").on("click",
                function(e) {
                    if ($(this).is(":checked")) {
                        dt.rows({ search: "applied" }).select();
                    } else {
                        dt.rows().deselect();
                    }
                });
            $('.js-loading-bar').modal({
                backdrop: 'static',
                show: false
            });
        });

        // открыть форму выбора Номенклатуры
        function linkSingleInventory(id) {
            selectedInventories = [id];
            loadNomenclatureModal();
        }

        function loadNomenclatureModal() {
            var url = '/Inventory/NomenclatureForm';
            $.ajax({
                type: "GET",
                url: url,
                success: function(data) {
                    $('#NomenclatureModalContent').html(data);
                    $('#NomenclatureModal').modal({
                        backdrop: 'static',
                        keyboard: false
                    });
                },
                error: function() {
                    alert('Ошибка открытия формы для выбора номенклатуры');
                }
            });
        }

        // привязать выбранную Номенклатуру к ТМЦ
        function linkSelectedNomenclature() {
            var dtNomenclature = $('#NomenclatureGrid').DataTable();
            var selectedData = dtNomenclature.rows({ selected: true }).data();
            if (selectedData.length === 0) {
                alert('Не выбрана позиция Номенклатуры');
                return;
            }
            var nomId = selectedData[0].id;
            var nomCode = selectedData[0].code;
            var nomName = selectedData[0].name;
            var url = '/Inventory/LinkNomenclature';
            var requestData = {
                "inventories": selectedInventories,
                "nomenclature": nomId
            };

            $.ajax({
                url: url,
                data: JSON.stringify(requestData),
                contentType: 'application/json; charset=utf-8;',
                dataType: 'json',
                type: 'post',
                success: function() {
                    // update DataTable
                    var dtInventory = $('#InventoryGrid').DataTable();
                    selectedInventories.forEach(function(id) {
                        var row = dtInventory.row('#' + id);
                        var data = row.data();
                        data.nomenclatureCode = nomCode;
                        data.nomenclatureName = nomName;
                        row.data(data).invalidate();
                    });
                    dtInventory.rows().deselect();
                    dtInventory.draw();
                    $('#NomenclatureModal').modal('hide');
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    alert('Ошибка выполнения операции');
                }
            });
        }

        function blockSelectedInventories() {
            var url = '/Inventory/BlockInventory';
            var requestData = {
                "inventories": selectedInventories
            };

            $.ajax({
                url: url,
                data: JSON.stringify(requestData),
                contentType: 'application/json; charset=utf-8;',
                dataType: 'json',
                type: 'post',
                success: function() {
                    // update DataTable
                    var dtInventory = $('#InventoryGrid').DataTable();
                    selectedInventories.forEach(function(id) {
                        var row = dtInventory.row('#' + id);
                        var data = row.data();
                        data.active = false;
                        data.nomenclatureCode = null;
                        data.nomenclatureName = null;
                        row.data(data).invalidate();
                    });
                    dtInventory.rows().deselect();
                    dtInventory.draw();
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    alert('Ошибка выполнения операции');
                }
            });
        }

        function reloadTable() {
            $('#InventoryGrid').DataTable().ajax.reload();
        }
    </script>
}
