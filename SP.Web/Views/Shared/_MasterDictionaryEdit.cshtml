@model SP.Service.Models.DictionaryModel
@{
    Layout = null;
    bool isAdminRole = this.User.IsInRole("Administrator");
    string readonlyText = isAdminRole ? "(true)" : "(false)";
}

<form id="EditForm">
    <div class="modal-header">
        <h5 class="modal-title">@ViewData["Title"]</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <input asp-for="Id" type="hidden" />
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" readonly="@readonlyText" />
        </div>
        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" asp-for="Inactive" readonly="@readonlyText" /> @Html.DisplayNameFor(model => model.Inactive)
            </label>
        </div>
        <div id="EditAlert" class="text-danger"></div>
    </div>
    <div class="modal-footer form-row button-row">
        @if (isAdminRole)
        {
            <button type="button" class="btn btn-primary" onclick="postForm();">Сохранить и закрыть</button>
        }
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
    </div>
</form>

<script>
    function postForm() {
        var url = '/@ViewData["ClassName"]/Edit';
        var postData = $('#EditForm').serialize();
        $.post(url, postData, function (data) {
            if (isNaN(data)) {
                $('#EditAlert').html(data);
                return;
            }
            $('#DictionaryGrid').DataTable().ajax.reload(null, false);
            $('#DictionaryModal').modal('hide');
        });
    }
</script>