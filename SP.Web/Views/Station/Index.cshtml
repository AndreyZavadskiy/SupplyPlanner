@{
    ViewData["Title"] = "Station List";
}

<h1>Справочник АЗС</h1>

<section>
    <div class="col-xl-9">
        <div class="zero-gutters">
            <div class="form-group row col-6">
                <label for="RegionList" class="control-label zero-gutters col-3">Регион</label>
                <select id="RegionList" asp-items="ViewBag.RegionList" class="col-9" onchange="changeRegion();"></select>
            </div>
            <div class="form-group row col-6">
                <label for="TerritoryList" class="control-label zero-gutters col-3">Территория</label>
                <select id="TerritoryList" class="col-9" onchange="changeTerritory();"></select>
            </div>
        </div>
    </div>

    <div class="col-xl-12">
        <hr class="section-separate" />
        <table id="StationGrid" class="table table-striped table-bordered nowrap" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th class="hidden-column"><input type="checkbox" class="selectAll" /></th>
                    <th></th>
                    <th class="hidden-column">ID региона</th>
                    <th class="hidden-column">ID территории</th>
                    <th class="hidden-column exportable-column">Регион</th>
                    <th class="hidden-column exportable-column">Территория</th>
                    <th class="exportable-column">Номер</th>
                    <th class="exportable-column">Статус</th>
                    <th class="exportable-column">Населенный пункт</th>
                    <th class="exportable-column">Местоположение</th>
                    <th class="exportable-column">Кластер <br />(уровень сервиса)</th>
                    <th class="exportable-column">Формат <br />операторной</th>
                    <th class="exportable-column">Система <br />управления</th>
                    <th class="exportable-column">Режим работы <br />торгового зала</th>
                    <th class="exportable-column">Санузел для <br />клиентов</th>
                    <th class="exportable-column">Расчетно-<br />кассовый узел</th>
                    <th class="exportable-column">Размер <br />торгового зала</th>
                    <th class="exportable-column">Кол-во <br />касс</th>
                    <th class="exportable-column">Кол-во персонала <br />в сутки</th>
                    <th class="exportable-column">Кол-во ТРК</th>
                    <th class="exportable-column">Кол-во сан.комнат <br />для клиентов</th>
                    <th class="exportable-column">Площадь <br />торгового зала</th>
                    <th class="exportable-column">Среднее кол-во <br />чеков в сутки</th>
                    <th class="exportable-column">Выручка в месяц</th>
                    <th class="exportable-column">Сибилла</th>
                    <th class="exportable-column">Выпечка</th>
                    <th class="exportable-column">Торты</th>
                    <th class="exportable-column">Фри</th>
                    <th class="exportable-column">Мармит</th>
                    <th class="exportable-column">Кухня</th>
                    <th class="exportable-column">Кол-во <br />кофемашин</th>
                    <th class="exportable-column">Кол-во посудомоечных <br />машин</th>
                </tr>
            </thead>
        </table>
    </div>
</section>
<section>
    <div class="modal" id="FilterModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Фильтры</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body filter-area">
                    <p>
                        <input type="checkbox" id="IncludeBlocked" /> включить заблокированных
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts
{
    <script>
        var region;
        var terr;
        $(document).ready(function () {
            region = '@ViewData["SelectedRegion"]';
            terr = '@ViewData["SelectedTerritory"]';
            var regionList = $('#RegionList');
            if (region) {
                regionList.val(region);
            } else {
                regionList.prop('selectedIndex', 0);
                region = regionList.val();
            }
            initializeDataTable();
            changeRegion(terr);
        });

        function initializeDataTable() {
            var d = new Date();
            var todayString = ("0" + d.getDate()).slice(-2) + "." + ("0" + (d.getMonth() + 1)).slice(-2) + "." + d.getFullYear();
            $('#StationGrid').DataTable({
                language: {
                    url: '/lib/datatables/i18n/russian.json'
                },
                //orderFixed: [[4, 'asc'], [5, 'asc']],
                //stateSave: true,
                lengthMenu: [
                    [10, 25, 50, 100, -1],
                    [10, 25, 50, 100, 'Все']
                ],
                scrollX: true,
                scrollCollapse: true,
                fixedColumns: {
                    leftColumns: 7
                },
                ajax: {
                    url: '/Station/LoadList',
                    type: 'POST',
                    data: function (d) {
                        d.region = $('#RegionList').val();
                        d.terr = $('#TerritoryList').val();
                    },
                    dataType: 'json'
                },
                columns:
                [
                    { defaultContent: '' },
                    {
                        render: function (data, type, full, meta) {
                            return '<a href="/Station/' + full.id + '"><img src="/images/pencil-square.svg"/></a>';
                        }
                    },
                    { data: 'regionId' },
                    { data: 'territoryId' },
                    { data: 'regionName' },
                    { data: 'territoryName' },
                    { data: 'stationNumber' },
                    { data: 'stationStatusName' },
                    { data: 'settlementName' },
                    { data: 'stationLocationName' },
                    { data: 'serviceLevelName' },
                    { data: 'operatorRoomFormatName' },
                    { data: 'managementSystemName' },
                    { data: 'tradingHallOperatingModeName' },
                    { data: 'clientRestroomName' },
                    { data: 'cashboxLocationName' },
                    { data: 'tradingHallSizeName' },
                    { data: 'cashboxTotal' },
                    { data: 'personnelPerDay' },
                    { data: 'fuelDispenserTotal' },
                    { data: 'clientRestroomTotal' },
                    { data: 'tradingHallArea' },
                    { data: 'chequePerDay' },
                    { data: 'revenueAvg' },
                    {
                        render: function (data, type, full, meta) {
                            return full.hasSibilla ? 'есть' : '';
                        }
                    },
                    {
                        render: function (data, type, full, meta) {
                            return full.hasBakery ? 'есть' : '';
                        }
                    },
                    {
                        render: function (data, type, full, meta) {
                            return full.hasCakes ? 'есть' : '';
                        }
                    },
                    { data: 'deepFryTotal' },
                    {
                        render: function (data, type, full, meta) {
                            return full.hasMarmite ? 'есть' : '';
                        }
                    },
                    {
                        render: function (data, type, full, meta) {
                            return full.hasKitchen ? 'есть' : '';
                        }
                    },
                    { data: 'coffeeMachineTotal' },
                    { data: 'dishWashingMachineTotal' }
                ],
                columnDefs:
                [
                    {
                        targets: 'hidden-column',
                        visible: false
                    }
                ],
                dom:
                    "<'row'<'col-sm-12 col-md-6 dt-action-group'B>>" +
                        "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-12 col-md-6'i>>" +
                        "<'row'<'col-sm-12 col-md-6 left-pagination'p>>",
                buttons:
                [
                    {
                        text: 'Добавить',
                        titleAttr: "Создать новую территорию в регионе",
                        className: 'dt-action-button',
                        action: function (e, dt, node, config) {
                            createGasStation();
                        }
                    },
                    {
                        text: 'Excel',
                        titleAttr: "Выгрузить таблицу в Excel",
                        className: 'dt-action-button',
                        extend: 'excel',
                        title: 'Список АЗС',
                        messageTop: 'Дата выгрузки ' + todayString,
                        exportOptions: {
                            columns: '.exportable-column',
                            modifier: { search: 'applied' },
                            grouped_array_index: [4, 5]
                        }
                    },
                    {
                        text: 'Фильтры',
                        className: 'dt-action-button filter-button',
                        action: function (e, dt, node, config) {
                            $('#FilterModal').modal();
                        }
                    }
                ]
            });
        }

        function changeRegion(terr) {
            debugger;
            var selectedRegion = $('#RegionList').val();
            var terrList = $('#TerritoryList');
            terrList.empty();
            if (selectedRegion === '') {
                terrList.trigger('change');
                return;
            }
            var url = '/Region/LoadTerritories';
            var requestData = { parent: selectedRegion };
            $.get(url,
                requestData,
                function (data) {
                    $.each(data,
                        function (index, element) {
                            terrList.append($('<option>',
                                {
                                    value: element.id,
                                    text: element.name
                                }));
                        });

                    if (terr) {
                        terrList.val(terr);
                    } else {
                        terrList.prop('selectedIndex', 0);
                    }
                    terrList.trigger('change');
                });
        }

        function changeTerritory() {
            if ($.fn.DataTable.isDataTable('#StationGrid')) {
                $('#StationGrid').DataTable().ajax.reload();
            } else {
                initializeDataTable();
            }

            terr = $('#TerritoryList').val();
            history.replaceState(null, '', '/Station?region=' + $('#RegionList').val() + '&terr=' + terr);
        }

        function createGasStation() {
            window.location = '/Station/Create?region=' + $('#RegionList').val() + '&terr=' + $('#TerritoryList').val();
        }
    </script>
}
